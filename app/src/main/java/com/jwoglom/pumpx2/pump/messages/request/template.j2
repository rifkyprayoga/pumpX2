package com.jwoglom.pumpx2.pump.messages.request.{{cat}};

import com.google.common.base.Preconditions;
import com.jwoglom.pumpx2.pump.messages.helpers.Bytes;
import com.jwoglom.pumpx2.pump.messages.Message;
import com.jwoglom.pumpx2.pump.messages.MessageType;
import com.jwoglom.pumpx2.pump.messages.annotations.MessageProps;
import com.jwoglom.pumpx2.pump.messages.response.{{cat}}.{{responseName}};

@MessageProps(
    opCode={{requestOpcode}},
    size={{requestSize}},
    type=MessageType.REQUEST,
    response={{responseName}}.class
)
public class {{requestName}} extends Message { {% for arg in requestArgs %}
    private {{ arg.type }} {{ arg.name }};{% endfor %}
    {% if requestSize > 0 %}
    public {{requestName}}() {}

    {% endif %}public {{requestName}}({% for arg in requestArgs %}{{ arg.type }} {{ arg.name }}{{ ", " if not loop.last else "" }}{% endfor %}) {
        {% if requestSize == 0 %}this.cargo = EMPTY;{% else %}this.cargo = buildCargo({% for arg in requestArgs %}{{ arg.name }}{{ ", " if not loop.last else "" }}{% endfor %});
        {% for arg in requestArgs %}this.{{ arg.name }} = {{ arg.name }};
        {% endfor %}{% endif %}
    }

    public void parse(byte[] raw) {
        Preconditions.checkArgument(raw.length == props().size());
        this.cargo = raw;
        {% for arg in requestArgs %}this.{{ arg.name }} = {% if arg.size == 1 %}raw[{{ arg.index }}]{% if arg.type == "boolean" %} != 0{% endif %};
        {% elif arg.type == "String" %}Bytes.readString(raw, {{ arg.index }}, {{ arg.size }});
        {% elif arg.size == 2 %}Bytes.readShort(raw, {{ arg.index }});
        {% elif arg.size == 4 %}Bytes.readUint32(raw, {{ arg.index }});
        {% elif arg.size == 8 %}Bytes.readUint64(raw, {{ arg.index }});
        {% else %}// {{ arg.size }} at {{ arg.index }}{% endif %}{% endfor %}
    }

    {% if requestSize > 0 %}
    public static byte[] buildCargo({% for arg in requestArgs %}{{ arg.type }} {{ arg.name }}{{ ", " if not loop.last else "" }}{% endfor %}) {
        return Bytes.combine({% for arg in requestArgs %}{% if arg.size == 1 %}
            new byte[]{ (byte) {% if arg.type == "boolean" %}({{ arg.name }} ? 1 : 0){% else %}{{ arg.name }}{% endif %} }{% elif arg.type == "String" %}
            Bytes.writeString({{ arg.name }}, {{ arg.size }}){% elif arg.size == 2 %}
            Bytes.firstTwoBytesLittleEndian({{ arg.name }}){% elif arg.size == 4 %}
            Bytes.toUint32({{ arg.name }}){% elif arg.size == 8 %}
            Bytes.toUint64({{ arg.name }}){% else %}
            // {{ arg.size }} at {{ arg.index }}
            {% endif %}{{ ", " if not loop.last else "" }}
        {% endfor %});
    }
    {% for arg in requestArgs %}public {{ arg.type }} get{{ arg.name[0]|upper }}{{ arg.name[1:] }}() {
        return {{ arg.name }};
    }
    {% endfor %}
    {% endif %}
}
